syntax = "proto3";

package properties_proto;

service PropertiesService {
    rpc create(CreateProperty) returns (PropertyResponse) {}
    rpc getPropertyById(PropertyById) returns(GetPropertyByIdResponse){}
    rpc getAllProperties(Empty) returns (PropertiesListResponse) {}
    rpc updateProperty(UpdateProperty) returns (GetPropertyByIdResponse) {}
    rpc deleteProperty(PropertyById) returns(GetPropertyByIdResponse){}
}

message PropertyById {
    string id = 1;
}

message CreateProperty {
    string title = 1;
    string description = 2;
    string address = 3;
    string propertyType = 4;
    int32 size = 5;
    int32 bedrooms = 6;
    int32 bathrooms = 7;
    int32 capacity = 8;
    int32 hostId = 9;
    // string images = 11; // Implementar las imágenes si es necesario
}

message Property {
    string title = 1;
    string description = 2;
    string address = 3;
    string propertyType = 4;
    int32 size = 5;
    int32 bedrooms = 6;
    int32 bathrooms = 7;
    int32 capacity = 8;
    int32 hostId = 9;
    // string images = 11; // Implementar las imágenes si es necesario
}

message PropertyResponse {
    bool error = 1;
    string message = 2;
    Property property = 3;
}

message GetPropertyByIdResponse {
    string title = 1;
    string description = 2;
    string address = 3;
    string propertyType = 4;
    int32 size = 5;
    int32 bedrooms = 6;
    int32 bathrooms = 7;
    int32 capacity = 8;
    int32 hostId = 9;
    bool error = 10;
    string message = 11;
  }

  message Empty {}

  message PropertiesListResponse {
    bool error = 1;
    string message = 2;
    repeated Property properties = 3; // Arreglo de propiedades
}

message UpdateProperty {
    string id = 1;
    string title = 2;
    string description = 3;
    string address = 4;
    string propertyType = 5;
    int32 size = 6;
    int32 bedrooms = 7;
    int32 bathrooms = 8;
    int32 capacity = 9;
    // string images = 11; // Implementar las imágenes si es necesario
}
